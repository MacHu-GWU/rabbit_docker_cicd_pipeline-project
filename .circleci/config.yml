# This is an example CI/CD workflow for a web application
# Every
use_python368_docker: &use_python368_docker
  docker:
    - image: circleci/python:3.6.8


version: 2
jobs:
  # Check out source code and cache
  pre_stage_check_out_source_code:
    <<: *use_python368_docker
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
              - .
  # Set up Python environment and cache
  pre_stage_build_python_environment:
    <<: *use_python368_docker
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          key: venv-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Create virtualenv, install dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install -r requirements-test.txt
      - save_cache:
          key: venv-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - 'venv'

  #--- Docker Image Tags build job ---
  build-runtime-python3.6.8-crawler:
    <<: *use_python368_docker
    steps:
#      - setup_remote_docker
      - attach_workspace:
          at: .
      - restore_cache:
          key: venv-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name:
          command: |
            echo "enter virtualenv"
            . venv/bin/activate
            python build_and_push_single.py repos/runtime repos/runtime/python3.6.8-crawler
          no_output_timeout: "30s"

workflows:
  version: 2
  my-workflow:
    jobs:
      - pre_stage_check_out_source_code
      - pre_stage_build_python_environment:
          requires:
            - pre_stage_check_out_source_code
      #--- Docker Image Tags build job ---
      - build-runtime-python3.6.8-crawler:
          requires:
            - pre_stage_build_python_environment
          context: sanhe-docker-hub
